type Token @entity {
  # {tokenID}
  id: ID!
  totalSupply: BigInt
  numericId: BigInt!
  owners: [TokenOwner!]! @derivedFrom(field: "token")
  uri: String
  meta: Metadata
  transfers: [Transfer!]! @derivedFrom(field: "token")
  contract: Contract
}

type Metadata @entity {
  id: ID!
  name: String
  description: String
  image: String
  attributes: [Attribute!]
  animationUrl: String
  type: String
}

type Attribute @jsonField {
  display: String
  trait: String
  value: String!
}

type Owner @entity {
  # {owner address}
  id: ID!
  ownedTokens: [TokenOwner!]! @derivedFrom(field: "owner")
}

type TokenOwner @entity {
  # ${owner.id}-${token.id}
  id: ID! 
  owner: Owner!
  token: Token!
  balance: BigInt!
}

type Contract @entity {
  # {contract address}
  id: ID!
  name: String
  symbol: String
  mintedTokens: [Token!]! @derivedFrom(field: "contract")
}

type Transfer @entity {
  # {txhash}-{tokenID}-{txlogindex}
  id: ID!
  token: Token!
  # Empty from is minting
  from: Owner
  # Empty to is burning
  to: Owner
  timestamp: BigInt!
  block: BigInt!
  transactionHash: String!
}
